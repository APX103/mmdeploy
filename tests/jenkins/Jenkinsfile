pipeline {
    agent { label 'deploy_linux_3090' }
    parameters {
        choice(
            name: 'CONFIG',
            choices : [
                'default.config',
                'default_2080.config',
                'openmmlabv1_quicktest.config',
                'openmmlabv1_quicktest.config',
                'openmmlabv2_quicktest.config',
                'win_default.config'
            ],
            description: 'select config'
        )
        choice(
            name: 'EXEC_NODE',
            choices: [
                'deploy_linux_3090',
                'deploy_linux_2080'
            ],
            description: 'select config'
        )
        booleanParam(
            name: 'EXEC_BUILD',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_PREBUILD',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_CONVERT',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_UNITTEST',
            defaultValue: true,
        )
        string(
            name: 'codebase_list',
            defaultValue: 'mmcls mmdet mmedit mmseg mmpose mmocr mmdet3d mmaction'
        )
        string(
            name: 'exec_performance',
            defaultValue: 'y'
        )
        string(
            name: 'exec_torch_versions',
            defaultValue: '1.10.0'
        )
        string(
            name: 'exec_models',
            defaultValue: 'all'
        )
        string(
            name: 'exec_backends',
            defaultValue: 'onnxruntime tensorrt ncnn torchscript openvino'
        )
        string(
            name: 'max_job_nums',
            defaultValue: '3'
        )
        string(
            name: 'repo_url',
            defaultValue: 'https://github.com/open-mmlab/mmdeploy.git'
        )
        string(
            name: 'mmdeploy_branch',
            defaultValue: 'master'
        )
        string(
            name: 'repo_version',
            defaultValue: 'v1.0'
        )
        string(
            name: 'tensorrt_version',
            defaultValue: '8.2.5.1'
        )
        string(
            name: 'requirement',
            defaultValue: 'requirementV1.0.json'
        )
    }

    stages {
        stage('Regression') {
            // stage('Set Config') {
            //     agent { label 'deploy_linux' }
            //     steps {
            //         sh "cp tests/jenkins/conf/${params.CONFIG} tests/jenkins/conf/tmp${RANDOM}.config"
            //         sh ""
            //     }
            // }
            parallel {
                stage('Build') {
                    agent { label params.EXEC_NODE }
                    when {
                        expression { return params.EXEC_BUILD }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_build.sh '${params.CONFIG}'"
                    }
                }

                stage('Convert') {
                    agent { label params.EXEC_NODE }
                    when {
                        expression { return params.EXEC_CONVERT }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_convert.sh '${params.CONFIG}'"
                    }
                }

                stage('Prebuild') {
                    agent { label params.EXEC_NODE }
                    when {
                        expression { return params.EXEC_PREBUILD }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_prebuild.sh '${params.CONFIG}'"
                    }
                }

                stage('Unittest') {
                    agent { label params.EXEC_NODE }
                    when {
                        expression { return params.EXEC_UNITTEST }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_ut.sh '${params.CONFIG}'"
                    }
                }
            }
        }
        stage('Tear Down') {
            agent { label params.EXEC_NODE }
            steps {
                sh "rm -f tests/jenkins/conf/tmp.config"
            }
        }
    }
}
