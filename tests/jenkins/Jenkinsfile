pipeline {
    agent { label 'deploy_linux' }

    parameters {
        string(
            name: 'CODEBASES', 
            defaultValue: 'mmdet mmcls mmdet3d mmedit mmocr mmpose mmrotate mmseg', 
            description: 'select codebase'
        )
        choice(
            name: 'DOCKER_IMAGE', 
            choices: [
                'mmdeploy-ci-ubuntu-18.04', 
                'mmdeploy-ci-ubuntu-18.04-cu102',
                'mmdeploy-ci-ubuntu-18.04-cu111',
                'mmdeploy-ci-ubuntu-20.04',
                'mmdeploy-ci-ubuntu-20.04-cu113'
            ], 
            description: 'Pick env'
        )
        booleanParam(
            name: 'EXEC_BUILD',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_PREBUILD',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_CONVERT',
            defaultValue: true,
        )
        booleanParam(
            name: 'EXEC_UNITTEST',
            defaultValue: true,
        )
    }

    stages {
        stage('Regression') {
            parallel {
                stage('Build') {
                    when {
                        expression { return params.EXEC_BUILD }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_build.sh '${params.DOCKER_IMAGE}' && wait"
                    }
                }
                
                stage('Convert') {
                    when {
                        expression { return params.EXEC_CONVERT }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_convert.sh '${params.DOCKER_IMAGE}' '${params.CODEBASES}'"
                    }
                }
                
                stage('Prebuild') {
                    when {
                        expression { return params.EXEC_PREBUILD }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_prebuild.sh '${params.DOCKER_IMAGE}'"
                    }
                }

                stage('Unittest') {
                    when {
                        expression { return params.EXEC_UNITTEST }
                    }
                    steps {
                        sh "tests/jenkins/scripts/test_ut.sh '${params.DOCKER_IMAGE}' '${params.CODEBASES}'"
                    }
                }
            }
        }

    }
}

